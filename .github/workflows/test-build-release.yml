name: Build and Release Godot Game

on:
  push:
    branches:
      - main

jobs:
  build-windows-x64_64:
    name: Build for Windows
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Godot
        run: |
          curl -L -o godot.zip https://github.com/godotengine/godot-builds/releases/download/4.5-dev3/Godot_v4.5-dev3_win64.exe.zip
          unzip godot.zip -d godot
          mv godot/Godot_v4.5-dev3_win64.exe godot/godot.exe

      - name: Export project
        run: |
          mkdir -p build/windows-x64_64
          godot/godot.exe --export-release "Windows-x86_64" build/windows-x86_64/game.exe

      - name: Upload Windows build
        uses: actions/upload-artifact@v4
        with:
          name: windows-build-x64_64
          path: build/windows-x64_64/game.exe

  build-linux-x64_64:
    name: Build for Linux
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Godot
        run: |
          curl -L -o godot.zip https://github.com/godotengine/godot-builds/releases/download/4.5-dev3/Godot_v4.5-dev3_linux.x86_64.zip
          unzip godot.zip -d godot
          chmod +x godot/Godot_v4.5-dev3_linux.x86_64

      - name: Export project
        run: |
          mkdir -p build/linux-x64_64
          godot/Godot_v4.5-dev3_linux.x86_64 --headless --export-release "Linux-x86_64" build/linux-x86_64/game.x86_64

      - name: Upload Linux build
        uses: actions/upload-artifact@v4
        with:
          name: linux-build-x64_64
          path: build/linux-x64_64/game.x86_64

  build-macos-x64_64:
    name: Build for macOS
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Godot
        run: |
          curl -L -o godot.zip https://github.com/godotengine/godot-builds/releases/download/4.5-dev3/Godot_v4.5-dev3_macos.universal.zip
          unzip godot.zip -d godot
          chmod +x godot/Godot.app/Contents/MacOS/Godot

      - name: Export project
        run: |
          mkdir -p build/macos-x64_64
          godot/Godot.app/Contents/MacOS/Godot --export-release "macOS-x86_64" build/macos-x86_64/game.dmg

      - name: Upload macOS build
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: build/macos-x64_64/game.dmg

  build-web:
    name: Build for Web
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Godot
        run: |
          curl -L -o godot.zip https://github.com/godotengine/godot-builds/releases/download/4.5-dev3/Godot_v4.5-dev3_linux.x86_64.zip
          unzip godot.zip -d godot
          chmod +x godot/Godot_v4.5-dev3_linux.x86_64

      - name: Export project
        run: |
          mkdir -p build/web
          godot/Godot_v4.5-dev3_linux.x86_64 --headless --export-release "Web" build/web/

      - name: Upload Web build
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web/

  release-windows-x64_64:
    name: Release Windows Build
    needs: build-windows-x64_64
    runs-on: ubuntu-latest

    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-build

      - name: Create GitHub Release (Windows)
        id: create_release_windows
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.sha }}
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload Windows build to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release_windows.outputs.upload_url }}
          asset_path: build/windows-x86_64/game.exe
          asset_name: game-windows-x64_64.exe
          asset_content_type: application/octet-stream

  release-linux-x64_64:
    name: Release Linux Build
    needs: build-linux-x64_64
    runs-on: ubuntu-latest

    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-build

      - name: Create GitHub Release (Linux)
        id: create_release_linux
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.sha }}
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload Linux build to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release_linux.outputs.upload_url }}
          asset_path: build/linux-x64_64/game.x86_64
          asset_name: game-linux-x86_64.bin
          asset_content_type: application/octet-stream

  release-macos-x64_64:
    name: Release macOS Build
    needs: build-macos-x64_64
    runs-on: ubuntu-latest

    steps:
      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: macos-build

      - name: Create GitHub Release (macOS)
        id: create_release_macos
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.sha }}
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload macOS build to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release_macos.outputs.upload_url }}
          asset_path: build/macos-x86_64/game.dmg
          asset_name: game-macos-x64_64.dmg
          asset_content_type: application/octet-stream

  release-web:
    name: Release Web Build
    needs: build-web
    runs-on: ubuntu-latest

    steps:
      - name: Download Web artifact
        uses: actions/download-artifact@v4
        with:
          name: web-build

      - name: Create GitHub Release (Web)
        id: create_release_web
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.sha }}
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload Web build to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release_web.outputs.upload_url }}
          asset_path: build/web/
          asset_name: game-web.zip
          asset_content_type: application/zip

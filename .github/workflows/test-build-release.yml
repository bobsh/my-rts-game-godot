name: Build and Release Godot Game

on:
  push:
    branches:
      - main

jobs:
  build-windows:
    name: Build for Windows
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Godot
        run: |
          curl -L -o godot.zip https://github.com/godotengine/godot/releases/download/4.4.1-stable/Godot_v4.4.1-stable_win64.exe.zip
          unzip godot.zip -d godot
          mv godot/Godot_v4.4.1-stable_win64.exe godot/godot.exe

      - name: Export project
        run: |
          mkdir -p build/windows
          godot/godot.exe --export "Windows Desktop" build/windows/game.exe

      - name: Upload Windows build
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: build/windows/game.exe

  build-linux:
    name: Build for Linux
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Godot
        run: |
          curl -L -o godot.zip https://github.com/godotengine/godot/releases/download/4.4.1-stable/Godot_v4.4.1-stable_linux.x86_64.zip
          unzip godot.zip -d godot
          chmod +x godot/Godot_v4.4.1-stable_linux.x86_64

      - name: Export project
        run: |
          mkdir -p build/linux
          godot/Godot_v4.4.1-stable_linux.x86_64 --export-release "Linux/X11" build/linux/game.x86_64

      - name: Upload Linux build
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: build/linux/game.x86_64

  build-macos:
    name: Build for macOS
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Godot
        run: |
          curl -L -o godot.zip https://github.com/godotengine/godot/releases/download/4.4.1-stable/Godot_v4.4.1-stable_macos.universal.zip
          unzip godot.zip -d godot
          chmod +x godot/Godot.app/Contents/MacOS/Godot

      - name: Export project
        run: |
          mkdir -p build/macos
          godot/Godot.app/Contents/MacOS/Godot --export-release "Mac OSX" build/macos/game.dmg

      - name: Upload macOS build
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: build/macos/game.dmg

  build-web:
    name: Build for Web
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Godot
        run: |
          curl -L -o godot.zip https://github.com/godotengine/godot/releases/download/4.4.1-stable/Godot_v4.4.1-stable_linux.x86_64.zip
          unzip godot.zip -d godot
          chmod +x godot/Godot_v4.4.1-stable_linux.x86_64

      - name: Export project
        run: |
          mkdir -p build/web
          godot/Godot_v4.4.1-stable_linux.x86_64 --export-release "HTML5" build/web/

      - name: Upload Web build
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web/

  release-windows:
    name: Release Windows Build
    needs: build-windows
    runs-on: ubuntu-latest

    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v3
        with:
          name: windows-build

      - name: Create GitHub Release (Windows)
        id: create_release_windows
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.sha }}
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload Windows build to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release_windows.outputs.upload_url }}
          asset_path: build/windows/game.exe
          asset_name: game-windows.exe
          asset_content_type: application/octet-stream

  release-linux:
    name: Release Linux Build
    needs: build-linux
    runs-on: ubuntu-latest

    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-build

      - name: Create GitHub Release (Linux)
        id: create_release_linux
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.sha }}
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload Linux build to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release_linux.outputs.upload_url }}
          asset_path: build/linux/game.x86_64
          asset_name: game-linux.x86_64
          asset_content_type: application/octet-stream

  release-macos:
    name: Release macOS Build
    needs: build-macos
    runs-on: ubuntu-latest

    steps:
      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: macos-build

      - name: Create GitHub Release (macOS)
        id: create_release_macos
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.sha }}
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload macOS build to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release_macos.outputs.upload_url }}
          asset_path: build/macos/game.dmg
          asset_name: game-macos.dmg
          asset_content_type: application/octet-stream

  release-web:
    name: Release Web Build
    needs: build-web
    runs-on: ubuntu-latest

    steps:
      - name: Download Web artifact
        uses: actions/download-artifact@v4
        with:
          name: web-build

      - name: Create GitHub Release (Web)
        id: create_release_web
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.sha }}
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload Web build to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release_web.outputs.upload_url }}
          asset_path: build/web/
          asset_name: game-web.zip
          asset_content_type: application/zip
